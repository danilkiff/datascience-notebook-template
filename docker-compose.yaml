services:
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    restart: unless-stopped
    command: jupyter lab --ip=0.0.0.0 --no-browser --IdentityProvider.token=''
    ports:
      - 8888:8888
    volumes:
      - ./workspace:/home/jupyternb
    working_dir: /home/jupyternb
    env_file: .env
    environment:
      - NB_USER=${NB_USER}
      - NB_UID=${NB_UID}
      - NB_GID=${NB_GID}
      - CHOWN_HOME=yes
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
    shm_size: 8g
    devices:
      - nvidia.com/gpu=all
    healthcheck:
      test: curl -f http://localhost:8888/api
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    depends_on:
      mlflow:
        condition: service_healthy

  s3:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    container_name: mlflow_s3
    restart: unless-stopped
    env_file: .env
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    healthcheck:
      # https://github.com/minio/minio/issues/18373#issuecomment-1790003599
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  init_s3:
    image: minio/mc:RELEASE.2025-08-13T08-35-41Z
    container_name: mlflow_init_s3
    depends_on:
      s3:
        condition: service_healthy
    env_file: .env
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://s3:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p minio/${MINIO_BUCKET} || true &&
      mc version enable minio/${MINIO_BUCKET} || true
      "
    restart: "no"

  postgres:
    image: postgres:17.6
    container_name: mlflow_postgres
    restart: unless-stopped
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow_server
    restart: unless-stopped
    env_file: .env
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      # don't spam on health checks
      - UVICORN_ACCESS_LOG=0
    depends_on:
      postgres:
        condition: service_healthy
      s3:
        condition: service_healthy
      init_s3:
        condition: service_completed_successfully
    ports:
      - "${MLFLOW_PORT}:5000"
    command: >
      server
        --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
        --default-artifact-root s3://${MINIO_BUCKET}
        --host 0.0.0.0
        --port 5000
    healthcheck:
      test: wget -qO- http://localhost:5000/ >/dev/null 2>&1 || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

volumes:
  postgres_data: {}
  minio_data: {}
